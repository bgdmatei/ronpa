<div class="container pl-0 pr-0">
  <div id="debate-box">
    <h1 class="text-center topic-proposition-text"><%= @debate.topic.proposition%></h1>
    <div class="d-flex justify-content-around">
      <h3 class="role text-center">Affirmative Position</h3>
      <h3 class="role text-center">Negative Position</h3>
    </div>
    <div class="row justify-content-center">
      <div class="phase">
        <h3 class='phase-text'>Waiting for match to start...</h3>
        <%= render 'shared/timer' %>
      </div>
    </div>
    <div class="d-flex justify-content-around pb-4">
      <div>
        <% if @debate.affirmative_user %>
          <%= render 'user_info', user: @debate.affirmative_user %>
        <% end %>
      </div>
      <div>
        <% if @debate.negative_user  %>
          <%= render 'user_info', user: @debate.negative_user %>
        <% end %>
      </div>
    </div>
    <div class="d-flex justify-content-around">
      <% @debate.participants.each do |participant| %>
          <% if participant.affirmative? %>
            <div>
              <div class="user-pane-affirmative">
                <%= render 'user_pane_affirmative', user: participant.user %>
              </div>
              <div class="button-affirmative text-center mt-4">
              <!-- insert html here -->
              </div>
            </div>
          <% elsif participant.negative? %>
            <div>
              <div class="user-pane-negative">
                <%= render 'user_pane_negative', user: participant.user %>
              </div>
              <div class="button-negative text-center mt-4">
              <!-- insert html here -->
              </div>
            </div>
          <% end %>
      <% end %>
    </div>
    <div>
      <div class="text-center text-moderator">
        <div>
          <% if @debate.participants.moderator.any? %>
            <%= cl_image_tag @debate.participants.moderator.first.user.photo, class:"text-center moderator-image" %>
          <% end %>
        </div>
        <% if @debate.participants.moderator.any? %>
          <h4><%= @debate.participants.moderator.first.user.username %> is Moderator</h>
          <div id="end-turn-button">
            <%= link_to "Progress Phase", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<% content_for :after_js do %>
  <script>
    App['debate_<%= @debate.id %>'] = App.cable.subscriptions.create(
      { channel: 'DebatesChannel', debate_id: <%= @debate.id %> },
      { received: (data) => {
        console.log(data, data.current_phase)
            const phaseText = document.querySelector('.phase-text');
            const endTurnButton = document.getElementById('end-turn-button')
            const userAffirmative = document.querySelector('.button-affirmative');
            const userNegative = document.querySelector('.button-negative');
            let event = new Event("newPhaseStarted");
            event.currentPhase = data.current_phase;
            window.dispatchEvent(event);

            switch (data.current_phase) {
              case "waiting_start":
                  phaseText.innerText = "Waiting for match to start...";
              break;
              case "count_in":
                  phaseText.innerText = "Affirmative opening arguments will start in:";
              break;
              case "affirmative_speech":
                  phaseText.innerText = "Affirmative opening arguments";
                  userPaneAffirmative.innerHTML = '<% if @debate.affirmative_user == current_user && @debate.affirmative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "negative_cross_examination_preparation":
                  phaseText.innerText = "Negative cross examination preparation";
                  userPaneNegative.innerHTML = '<% if @debate.negative_user == current_user && @debate.negative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "negative_cross_examination":
                  phaseText.innerText = "Negative cross examination";
                  userPaneNegative.innerHTML = '<% if @debate.negative_user == current_user && @debate.negative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "negative_speech_preparation":
                  phaseText.innerText = "Negative opening argument preparation";
                  userPaneNegative.innerHTML = '<% if @debate.negative_user == current_user && @debate.negative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "negative_speech":
                  phaseText.innerText = "Negative opening arguments";
                  userPaneNegative.innerHTML = '<% if @debate.negative_user == current_user && @debate.negative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "affirmative_cross_examination_preparation":
                  phaseText.innerText = "Affirmative cross examination preparation";
                  userPaneAffirmative.innerHTML = '<% if @debate.affirmative_user == current_user && @debate.affirmative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "affirmative_cross_examination":
                  phaseText.innerText = "Affirmative cross examination";
                  userPaneAffirmative.innerHTML = '<% if @debate.affirmative_user== current_user && @debate.affirmative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "affirmative_closing_statement_preparation":
                  phaseText.innerText = "Affirmative closing statement prepatation";
                  userPaneAffirmative.innerHTML = '<% if @debate.affirmative_user== current_user && @debate.affirmative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "affirmative_closing_statement":
                  phaseText.innerText = "Affirmative closing statement";
                  userPaneAffirmative.innerHTML = '<% if @debate.affirmative_user == current_user && @debate.affirmative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "negative_closing_statement_preparation":
                  phaseText.innerText = "Negative closing statement preparation";
                  userPaneNegative.innerHTML = '<% if @debate.negative_user == current_user && @debate.negative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "negative_closing_statement":
                  phaseText.innerText = "Negative closing statement";
                  userPaneNegative.innerHTML = '<% if @debate.negative_user == current_user && @debate.negative_turn? %><div class="end-turn-button"><%= link_to "End Turn", debate_next_phase_path(@debate), method: :patch, class: "hvr-outline-in"  %></div><% end %>';
              break;
              case "waiting_end":
                  phaseText.innerText = "Moderator giving final score...";
                  endTurnButton.innerHTML = '<%= link_to "Affirmative Wins", debate_set_result_path(@debate, winner_id: @debate.participants.affirmative.first), method: :patch, class: "btn-new"  %><%= link_to "End Turn", debate_next_phase_path(@debate), class: "btn-new next-phase",
                method: :patch, remote: true %><%= link_to "Negative Wins", debate_set_result_path(@debate, winner_id: @debate.participants.negative.first), method: :patch, class: "btn-new"  %>';
              break;
              case "finished":
                  phaseText.innerHTML = "<h3>The winner is Someone</h3>";
                  // document.body.innerHTML = '<%= j render partial: 'results'%>'
                  location.reload();
        }
      }
      }
    );
  </script>
<% end %>
