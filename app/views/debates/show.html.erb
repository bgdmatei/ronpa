
<%= render 'updated_show', debate: @debate, my_participant: @my_participant %>

<% content_for :after_js do %>
  <script>
  const currentUserId = <%= current_user.id %>;
  console.log( currentUserId );
  launchTimer('<%= @debate.phase %>');

  function launchTimer(phase) {
    let event = new Event("newPhaseStarted");
    event.currentPhase = phase;
    window.dispatchEvent(event);
  }

    App['debate_<%= @debate.id %>'] = App.cable.subscriptions.create(
      { channel: 'DebatesChannel', debate_id: <%= @debate.id %> },
      { received: (data) => {


        if (data.current_phase === "finished") {
          window.location.reload();
        }

        document.body.innerHTML = data.page_html;
        console.log("Replaced body with data received from AC")

        // selectors
        const phaseText = document.querySelector('.phase-text');
        const endTurnButton = document.getElementById('moderator-buttons');
        const buttonAffirmative = document.querySelector('.button-affirmative');
        const buttonNegative = document.querySelector('.button-negative');
        const buttonsModerator = document.getElementById('moderator-buttons');
        const buttonAffirmativeWin = document.getElementById('affirmative-win-button');
        const buttonNegativeWin = document.getElementById('negative-win-button');

        // let event = new Event("newPhaseStarted");
        // event.currentPhase = data.current_phase;
        // window.dispatchEvent(event);
        launchTimer(data.current_phase)

        // Update show based on phase
        const phases = {
          "waiting_start": "Waiting for match to start...",
          "count_in": "Affirmative opening arguments will start in:",
          "affirmative_speech": "Affirmative opening arguments",
          "negative_cross_examination_preparation": "Negative cross examination preparation",
          "negative_cross_examination": "Negative cross examination",
          "negative_speech_preparation": "Negative opening argument preparation",
          "negative_speech": "Negative opening arguments",
          "affirmative_cross_examination_preparation": "Affirmative cross examination preparation",
          "affirmative_cross_examination": "Affirmative cross examination",
          "affirmative_closing_statement_preparation": "Affirmative closing statement prepatation",
          "affirmative_closing_statement": "Affirmative closing statement",
          "negative_closing_statement_preparation": "Negative closing statement preparation",
          "negative_closing_statement": "Negative closing statement",
          "waiting_end": "Moderator giving final score...",
          "finished": "<h3>The winner is Someone</h3>"
        }

        // const button = {
          // "waiting_start": '<%#= link_to "End Turn", debate_next_phase_path(@debate), class: "btn-new next-phase",
                //  method: :patch, remote: true %>',
          // "count_in": '<%#= link_to "End Turn", debate_next_phase_path(@debate), class: "btn-new next-phase",
                // method: :patch, remote: true %>',
          // "waiting_end": '<%#= link_to "Affirmative Wins", debate_set_result_path(@debate, winner_id: @debate.participants.affirmative.first),method: :patch, class: "btn-new"  %><%#= link_to "End Turn", debate_next_phase_path(@debate), class: "btn-new next-phase",
                // method: :patch, remote: true %><%#= link_to "Negative Wins", debate_set_result_path(@debate, winner_id: @debate.participants.negative.first), method: :patch, class: "btn-new"  %>'

        // }

        // phaseText.innerText = phases[data.current_phase]
        // endTurnButton.innerHTML = button[data.current_phase]

        // switch (data.current_phase) {
        //   case "finished":
        //       phaseText.innerHTML = "<h3>The winner is Someone</h3>";
        //       // document.body.innerHTML = '<%#= j render partial: 'results'%>'
        //       location.reload();
        // }
        console.log(data);
        // console.log( data.affirmative_user.id);
        console.log(currentUserId);

        }
      }
    );
  </script>
<% end %>
